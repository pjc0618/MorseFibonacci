


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Myprog, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000                 EXPORT           __main
    4 00000000         
    5 00000000         ;don't change these addresses!
    6 00000000 4004A058 
                       PCR22   EQU              0x4004A058  ;PORTB_PCR22  addre
                                                            ss
    7 00000000 40048038 
                       SCGC5   EQU              0x40048038  ;SIM_SCGC5    addre
                                                            ss
    8 00000000 400FF054 
                       PDDR    EQU              0x400FF054  ;GPIOB_PDDR   addre
                                                            ss
    9 00000000 400FF048 
                       PCOR    EQU              0x400FF048  ;GPIOB_PCOR   addre
                                                            ss
   10 00000000 400FF044 
                       PSOR    EQU              0x400FF044  ;GPIOB_PSOR   addre
                                                            ss
   11 00000000         
   12 00000000 00000400 
                       ten     EQU              0x00000400  ; 1 << 10
   13 00000000 00000100 
                       eight   EQU              0x00000100  ; 1 << 8
   14 00000000 00400000 
                       twentytwo
                               EQU              0x00400000  ; 1 << 22
   15 00000000         
   16 00000000         __main
   17 00000000         ; Your code goes here!
   18 00000000 F04F 0307       MOV              R3, #7
   19 00000004 F04F 0713       MOV              R7, #19
   20 00000008 F64B 61EF       MOV              R1, #0xbeef
   21 0000000C F000 F90A       BL               LEDSETUP
   22 00000010 F000 F803       BL               test
   23 00000014 F000 F915       BL               LEDON
   24 00000018 E121            B                forever
   25 0000001A         
   26 0000001A         test
   27 0000001A B500            PUSH             {LR}
   28 0000001C F04F 0000       MOV              R0, #0
   29 00000020 F000 F827       BL               MorseDigit
   30 00000024 F04F 0001       MOV              R0, #1
   31 00000028 F000 F823       BL               MorseDigit
   32 0000002C F04F 0002       MOV              R0, #2
   33 00000030 F000 F81F       BL               MorseDigit
   34 00000034 F04F 0003       MOV              R0, #3
   35 00000038 F000 F81B       BL               MorseDigit
   36 0000003C F04F 0004       MOV              R0, #4
   37 00000040 F000 F817       BL               MorseDigit
   38 00000044 F04F 0005       MOV              R0, #5
   39 00000048 F000 F813       BL               MorseDigit
   40 0000004C F04F 0006       MOV              R0, #6
   41 00000050 F000 F80F       BL               MorseDigit
   42 00000054 F04F 0007       MOV              R0, #7
   43 00000058 F000 F80B       BL               MorseDigit
   44 0000005C F04F 0008       MOV              R0, #8
   45 00000060 F000 F807       BL               MorseDigit



ARM Macro Assembler    Page 2 


   46 00000064 F04F 0009       MOV              R0, #9
   47 00000068 F000 F803       BL               MorseDigit
   48 0000006C F85D EB04       POP              {LR}
   49 00000070 4770            BX               LR
   50 00000072         
   51 00000072         
   52 00000072         MorseDigit
   53 00000072 B500            PUSH             {LR}
   54 00000074         ;MOV   R1, #50000 ;Set r1 as loop variable
   55 00000074 2805            CMP              R0, #5      ; determine which c
                                                            ase to use
   56 00000076 DD66            BLE              LT
   57 00000078 DC74            BGT              GT
   58 0000007A BF00    done    NOP
   59 0000007C F85D EB04       POP              {LR}
   60 00000080 4770            BX               LR
   61 00000082         
   62 00000082         loop
   63 00000082 3901            SUBS             R1, #1
   64 00000084 BF00            NOP
   65 00000086 BF00            NOP
   66 00000088 BF00            NOP
   67 0000008A BF00            NOP
   68 0000008C BF00            NOP
   69 0000008E BF00            NOP
   70 00000090 BF00            NOP
   71 00000092 BF00            NOP
   72 00000094 BF00            NOP
   73 00000096 BF00            NOP
   74 00000098 BF00            NOP
   75 0000009A BF00            NOP
   76 0000009C BF00            NOP
   77 0000009E BF00            NOP
   78 000000A0 BF00            NOP
   79 000000A2 BF00            NOP
   80 000000A4 BF00            NOP
   81 000000A6 BF00            NOP
   82 000000A8 BF00            NOP
   83 000000AA BF00            NOP
   84 000000AC BF00            NOP
   85 000000AE BF00            NOP
   86 000000B0 BF00            NOP
   87 000000B2 BF00            NOP
   88 000000B4 BF00            NOP
   89 000000B6 BF00            NOP
   90 000000B8 BF00            NOP
   91 000000BA BF00            NOP
   92 000000BC BF00            NOP
   93 000000BE BF00            NOP
   94 000000C0 BF00            NOP
   95 000000C2 BF00            NOP
   96 000000C4 BF00            NOP
   97 000000C6 BF00            NOP
   98 000000C8 BF00            NOP
   99 000000CA BF00            NOP
  100 000000CC BF00            NOP
  101 000000CE BF00            NOP
  102 000000D0 BF00            NOP
  103 000000D2 BF00            NOP



ARM Macro Assembler    Page 3 


  104 000000D4 BF00            NOP
  105 000000D6 BF00            NOP
  106 000000D8 BF00            NOP
  107 000000DA BF00            NOP
  108 000000DC BF00            NOP
  109 000000DE BF00            NOP
  110 000000E0 BF00            NOP
  111 000000E2 BF00            NOP
  112 000000E4 BF00            NOP
  113 000000E6 BF00            NOP
  114 000000E8 BF00            NOP
  115 000000EA BF00            NOP
  116 000000EC BF00            NOP
  117 000000EE BF00            NOP
  118 000000F0 BF00            NOP
  119 000000F2 BF00            NOP
  120 000000F4 BF00            NOP
  121 000000F6 BF00            NOP
  122 000000F8 BF00            NOP
  123 000000FA BF00            NOP
  124 000000FC BF00            NOP
  125 000000FE BF00            NOP
  126 00000100 BF00            NOP
  127 00000102 BF00            NOP
  128 00000104 BF00            NOP
  129 00000106 BF00            NOP
  130 00000108 BF00            NOP
  131 0000010A BF00            NOP
  132 0000010C BF00            NOP
  133 0000010E BF00            NOP
  134 00000110 BF00            NOP
  135 00000112 BF00            NOP
  136 00000114 BF00            NOP
  137 00000116 BF00            NOP
  138 00000118 BF00            NOP
  139 0000011A BF00            NOP
  140 0000011C BF00            NOP
  141 0000011E BF00            NOP
  142 00000120 BF00            NOP
  143 00000122 BF00            NOP
  144 00000124 BF00            NOP
  145 00000126 BF00            NOP
  146 00000128 BF00            NOP
  147 0000012A BF00            NOP
  148 0000012C BF00            NOP
  149 0000012E BF00            NOP
  150 00000130 BF00            NOP
  151 00000132 BF00            NOP
  152 00000134 BF00            NOP
  153 00000136 BF00            NOP
  154 00000138 BF00            NOP
  155 0000013A BF00            NOP
  156 0000013C BF00            NOP
  157 0000013E BF00            NOP
  158 00000140 BF00            NOP
  159 00000142 D19E            BNE              loop
  160 00000144 4770            BX               LR
  161 00000146         
  162 00000146         



ARM Macro Assembler    Page 4 


  163 00000146         LT
  164 00000146 B50E            PUSH             {R1, R2, R3, LR}
  165 00000148 F04F 0105       MOV              R1, #5      ;use R1 as a consta
                                                            nt for operations
  166 0000014C 4602            MOV              R2, R0      ;store number of do
                                                            ts in R2
  167 0000014E EBA1 0300       SUB              R3, R1, R0  ; store number of d
                                                            ashes in R3
  168 00000152 F24C 3150       MOV              R1, #50000  ;Set loop counter
  169 00000156 F000 F815       BL               DOT
  170 0000015A F000 F82B       BL               DASH
  171 0000015E E8BD 400E       POP              {R1, R2, R3, LR}
  172 00000162 E78A            B                done
  173 00000164         
  174 00000164         GT
  175 00000164 B50E            PUSH             {R1, R2, R3, LR}
  176 00000166 F04F 0105       MOV              R1, #5
  177 0000016A EBA0 0301       SUB              R3, R0, R1
  178 0000016E EBA1 0203       SUB              R2, R1, R3
  179 00000172 F24C 3150       MOV              R1, #50000
  180 00000176 F000 F81D       BL               DASH
  181 0000017A F000 F803       BL               DOT
  182 0000017E E8BD 400E       POP              {R1, R2, R3, LR}
  183 00000182 E77A            B                done
  184 00000184         
  185 00000184         DOT
  186 00000184 2A00            CMP              R2, #0
  187 00000186 D014            BEQ              fin1
  188 00000188 B500            PUSH             {LR}
  189 0000018A F000 F85A       BL               LEDON
  190 0000018E F7FF FF78       BL               loop
  191 00000192 F24C 3150       MOV              R1, #50000
  192 00000196 F000 F85B       BL               LEDOFF
  193 0000019A F7FF FF72       BL               loop
  194 0000019E F24C 3150       MOV              R1, #50000
  195 000001A2 F7FF FF6E       BL               loop
  196 000001A6 F24C 3150       MOV              R1, #50000
  197 000001AA 3A01            SUBS             R2, #1
  198 000001AC F85D EB04       POP              {LR}
  199 000001B0 E7E8            B                DOT
  200 000001B2 4770    fin1    BX               LR
  201 000001B4         DASH
  202 000001B4 2B00            CMP              R3, #0
  203 000001B6 D018            BEQ              fin
  204 000001B8 B500            PUSH             {LR}
  205 000001BA 3B01            SUBS             R3, #1
  206 000001BC F000 F841       BL               LEDON
  207 000001C0 F7FF FF5F       BL               loop
  208 000001C4 F24C 3150       MOV              R1, #50000
  209 000001C8 F7FF FF5B       BL               loop
  210 000001CC F24C 3150       MOV              R1, #50000
  211 000001D0 F7FF FF57       BL               loop
  212 000001D4 F24C 3150       MOV              R1, #50000
  213 000001D8 F000 F83A       BL               LEDOFF
  214 000001DC F7FF FF51       BL               loop
  215 000001E0 F24C 3150       MOV              R1, #50000
  216 000001E4 F85D EB04       POP              {LR}
  217 000001E8 E7E4            B                DASH
  218 000001EA 4770    fin     BX               LR



ARM Macro Assembler    Page 5 


  219 000001EC         fib
  220 000001EC         ; Your code goes here!
  221 000001EC B500            PUSH             {LR}
  222 000001EE 2800            CMP              R0, #0
  223 000001F0 D001            BEQ              ex
  224 000001F2 2801            CMP              R0, #1
  225 000001F4 D102            BNE              recurse
  226 000001F6 F85D EB04 
                       ex      POP              {LR}
  227 000001FA 4770            BX               LR
  228 000001FC         recurse                              ;PUSH  {R1}
  229 000001FC F1A0 0101       SUB              R1, R0, #1  ;R1=n-1
  230 00000200 F1A0 0001       SUB              R0, #1      ;R0 = n-1
  231 00000204 B402            PUSH             {R1}        ;Store value of n-1
                                                            
  232 00000206 F7FF FFF1       BL               fib         ;calculate fib(n-1)
                                                             into R0
  233 0000020A BC02            POP              {R1}        ; return n-1 to R1
  234 0000020C 4602            MOV              R2, R0      ;Store fib(n-1) in 
                                                            R2
  235 0000020E F1A1 0101       SUB              R1, #1      ;Store n-2 in R1
  236 00000212 4608            MOV              R0, R1      ;Store n-2 in R0
  237 00000214 B404            PUSH             {R2}        ; Push fib(n-1) to 
                                                            stack
  238 00000216 F7FF FFE9       BL               fib         ; Calculate fib(n-2
                                                            ) into R0
  239 0000021A BC04            POP              {R2}        ;restore fib(n-1)
  240 0000021C 4410            ADD              R0, R2      ;fib(n-1) +fib(n-2)
                                                            
  241 0000021E F85D EB04       POP              {LR}
  242 00000222 4770            BX               LR
  243 00000224         
  244 00000224         
  245 00000224         
  246 00000224         ; Call this function first to set up the LED
  247 00000224         LEDSETUP
  248 00000224 B430            PUSH             {R4, R5}    ; To preserve R4 an
                                                            d R5
  249 00000226 F44F 6480       LDR              R4, =ten    ; Load the value 1 
                                                            << 10
  250 0000022A 4D0D            LDR              R5, =SCGC5
  251 0000022C 602C            STR              R4, [R5]
  252 0000022E         
  253 0000022E F44F 7480       LDR              R4, =eight
  254 00000232 4D0C            LDR              R5, =PCR22
  255 00000234 602C            STR              R4, [R5]
  256 00000236         
  257 00000236 F44F 0480       LDR              R4, =twentytwo
  258 0000023A 4D0B            LDR              R5, =PDDR
  259 0000023C 602C            STR              R4, [R5]
  260 0000023E BC30            POP              {R4, R5}
  261 00000240 4770            BX               LR
  262 00000242         
  263 00000242         ; The functions below are for you to use freely      
  264 00000242         LEDON
  265 00000242 B430            PUSH             {R4, R5}
  266 00000244 F44F 0480       LDR              R4, =twentytwo
  267 00000248 4D08            LDR              R5, =PCOR
  268 0000024A 602C            STR              R4, [R5]



ARM Macro Assembler    Page 6 


  269 0000024C BC30            POP              {R4, R5}
  270 0000024E 4770            BX               LR
  271 00000250         
  272 00000250         LEDOFF
  273 00000250 B430            PUSH             {R4, R5}
  274 00000252 F44F 0480       LDR              R4, =twentytwo
  275 00000256 4D06            LDR              R5, =PSOR
  276 00000258 602C            STR              R4, [R5]
  277 0000025A BC30            POP              {R4, R5}
  278 0000025C 4770            BX               LR
  279 0000025E         
  280 0000025E         forever
  281 0000025E E7FE            B                forever     ; wait here forever
                                                             
  282 00000260                 END
              40048038 
              4004A058 
              400FF054 
              400FF048 
              400FF044 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\framework.d -o.\objects\framework.o -I.\RTE\_Targe
t_1 -IC:\Users\pjc06\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include
 -IC:\Users\pjc06\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Inc
lude --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 529" --pre
define="_RTE_ SETA 1" --predefine="MK64FN1M0xxx12 SETA 1" --list=.\listings\fra
mework.lst C:\Users\pjc06\Downloads\Framework.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DASH 000001B4

Symbol: DASH
   Definitions
      At line 201 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 170 in file C:\Users\pjc06\Downloads\Framework.s
      At line 180 in file C:\Users\pjc06\Downloads\Framework.s
      At line 217 in file C:\Users\pjc06\Downloads\Framework.s

DOT 00000184

Symbol: DOT
   Definitions
      At line 185 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 169 in file C:\Users\pjc06\Downloads\Framework.s
      At line 181 in file C:\Users\pjc06\Downloads\Framework.s
      At line 199 in file C:\Users\pjc06\Downloads\Framework.s

GT 00000164

Symbol: GT
   Definitions
      At line 174 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 57 in file C:\Users\pjc06\Downloads\Framework.s
Comment: GT used once
LEDOFF 00000250

Symbol: LEDOFF
   Definitions
      At line 272 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 192 in file C:\Users\pjc06\Downloads\Framework.s
      At line 213 in file C:\Users\pjc06\Downloads\Framework.s

LEDON 00000242

Symbol: LEDON
   Definitions
      At line 264 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 23 in file C:\Users\pjc06\Downloads\Framework.s
      At line 189 in file C:\Users\pjc06\Downloads\Framework.s
      At line 206 in file C:\Users\pjc06\Downloads\Framework.s

LEDSETUP 00000224

Symbol: LEDSETUP
   Definitions
      At line 247 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 21 in file C:\Users\pjc06\Downloads\Framework.s
Comment: LEDSETUP used once
LT 00000146

Symbol: LT
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 163 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 56 in file C:\Users\pjc06\Downloads\Framework.s
Comment: LT used once
MorseDigit 00000072

Symbol: MorseDigit
   Definitions
      At line 52 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 29 in file C:\Users\pjc06\Downloads\Framework.s
      At line 31 in file C:\Users\pjc06\Downloads\Framework.s
      At line 33 in file C:\Users\pjc06\Downloads\Framework.s
      At line 35 in file C:\Users\pjc06\Downloads\Framework.s
      At line 37 in file C:\Users\pjc06\Downloads\Framework.s
      At line 39 in file C:\Users\pjc06\Downloads\Framework.s
      At line 41 in file C:\Users\pjc06\Downloads\Framework.s
      At line 43 in file C:\Users\pjc06\Downloads\Framework.s
      At line 45 in file C:\Users\pjc06\Downloads\Framework.s
      At line 47 in file C:\Users\pjc06\Downloads\Framework.s

Myprog 00000000

Symbol: Myprog
   Definitions
      At line 1 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      None
Comment: Myprog unused
__main 00000000

Symbol: __main
   Definitions
      At line 16 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 3 in file C:\Users\pjc06\Downloads\Framework.s
Comment: __main used once
done 0000007A

Symbol: done
   Definitions
      At line 58 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 172 in file C:\Users\pjc06\Downloads\Framework.s
      At line 183 in file C:\Users\pjc06\Downloads\Framework.s

ex 000001F6

Symbol: ex
   Definitions
      At line 226 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 223 in file C:\Users\pjc06\Downloads\Framework.s
Comment: ex used once
fib 000001EC

Symbol: fib
   Definitions
      At line 219 in file C:\Users\pjc06\Downloads\Framework.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 232 in file C:\Users\pjc06\Downloads\Framework.s
      At line 238 in file C:\Users\pjc06\Downloads\Framework.s

fin 000001EA

Symbol: fin
   Definitions
      At line 218 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 203 in file C:\Users\pjc06\Downloads\Framework.s
Comment: fin used once
fin1 000001B2

Symbol: fin1
   Definitions
      At line 200 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 187 in file C:\Users\pjc06\Downloads\Framework.s
Comment: fin1 used once
forever 0000025E

Symbol: forever
   Definitions
      At line 280 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 24 in file C:\Users\pjc06\Downloads\Framework.s
      At line 281 in file C:\Users\pjc06\Downloads\Framework.s

loop 00000082

Symbol: loop
   Definitions
      At line 62 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 159 in file C:\Users\pjc06\Downloads\Framework.s
      At line 190 in file C:\Users\pjc06\Downloads\Framework.s
      At line 193 in file C:\Users\pjc06\Downloads\Framework.s
      At line 195 in file C:\Users\pjc06\Downloads\Framework.s
      At line 207 in file C:\Users\pjc06\Downloads\Framework.s
      At line 209 in file C:\Users\pjc06\Downloads\Framework.s
      At line 211 in file C:\Users\pjc06\Downloads\Framework.s
      At line 214 in file C:\Users\pjc06\Downloads\Framework.s

recurse 000001FC

Symbol: recurse
   Definitions
      At line 228 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 225 in file C:\Users\pjc06\Downloads\Framework.s
Comment: recurse used once
test 0000001A

Symbol: test
   Definitions
      At line 26 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 22 in file C:\Users\pjc06\Downloads\Framework.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Comment: test used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PCOR 400FF048

Symbol: PCOR
   Definitions
      At line 9 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 267 in file C:\Users\pjc06\Downloads\Framework.s
Comment: PCOR used once
PCR22 4004A058

Symbol: PCR22
   Definitions
      At line 6 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 254 in file C:\Users\pjc06\Downloads\Framework.s
Comment: PCR22 used once
PDDR 400FF054

Symbol: PDDR
   Definitions
      At line 8 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 258 in file C:\Users\pjc06\Downloads\Framework.s
Comment: PDDR used once
PSOR 400FF044

Symbol: PSOR
   Definitions
      At line 10 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 275 in file C:\Users\pjc06\Downloads\Framework.s
Comment: PSOR used once
SCGC5 40048038

Symbol: SCGC5
   Definitions
      At line 7 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 250 in file C:\Users\pjc06\Downloads\Framework.s
Comment: SCGC5 used once
eight 00000100

Symbol: eight
   Definitions
      At line 13 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 253 in file C:\Users\pjc06\Downloads\Framework.s
Comment: eight used once
ten 00000400

Symbol: ten
   Definitions
      At line 12 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 249 in file C:\Users\pjc06\Downloads\Framework.s
Comment: ten used once
twentytwo 00400000

Symbol: twentytwo



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 14 in file C:\Users\pjc06\Downloads\Framework.s
   Uses
      At line 257 in file C:\Users\pjc06\Downloads\Framework.s
      At line 266 in file C:\Users\pjc06\Downloads\Framework.s
      At line 274 in file C:\Users\pjc06\Downloads\Framework.s

8 symbols
364 symbols in table
